package eam.desarrollo.hospital.entidades;
import java.io.Serializable;

import javax.swing.JOptionPane;

/**
 * Model class of Cliente.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Cliente implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** IdCliente. */
	private Integer idcliente;

	/** identificacion_cliente. */
	private Integer identificacionCliente;

	/** nombre_cliente. */
	private String nombreCliente;

	/** apellido_cliente. */
	private String apellidoCliente;

	/** telefono_cliente. */
	private String telefonoCliente;

	/** edad_cliente. */
	private Integer edadCliente;

	/**
	 * 
	 * @param idcliente
	 * @param identificacionCliente
	 * @param nombreCliente
	 * @param apellidoCliente
	 * @param telefonoCliente
	 * @param edadCliente
	 */
	public Cliente(Integer idcliente, Integer identificacionCliente, String nombreCliente, String apellidoCliente,
			String telefonoCliente, Integer edadCliente) {
		super();
		this.idcliente = idcliente;
		this.identificacionCliente = identificacionCliente;
		this.nombreCliente = nombreCliente;
		this.apellidoCliente = apellidoCliente;
		this.telefonoCliente = telefonoCliente;
		this.edadCliente = edadCliente;
	}

	/**
	 * Constructor.
	 */
	public Cliente() {
	}

	/**
	 * Set the IdCliente.
	 * 
	 * @param idcliente
	 *            IdCliente
	 */
	public void setIdcliente(Integer idcliente) {
		this.idcliente = idcliente;
	}

	/**
	 * Get the IdCliente.
	 * 
	 * @return IdCliente
	 */
	public Integer getIdcliente() {
		return this.idcliente;
	}

	/**
	 * Set the identificacion_cliente.
	 * 
	 * @param identificacionCliente
	 *            identificacion_cliente
	 */
	public void setIdentificacionCliente(Integer identificacionCliente) {
		this.identificacionCliente = identificacionCliente;
	}

	/**
	 * Get the identificacion_cliente.
	 * 
	 * @return identificacion_cliente
	 */
	public Integer getIdentificacionCliente() {
		return this.identificacionCliente;
	}

	/**
	 * Set the nombre_cliente.
	 * 
	 * @param nombreCliente
	 *            nombre_cliente
	 */
	public void setNombreCliente(String nombreCliente) {
		this.nombreCliente = nombreCliente;
	}

	/**
	 * Get the nombre_cliente.
	 * 
	 * @return nombre_cliente
	 */
	public String getNombreCliente() {
		return this.nombreCliente;
	}

	/**
	 * Set the apellido_cliente.
	 * 
	 * @param apellidoCliente
	 *            apellido_cliente
	 */
	public void setApellidoCliente(String apellidoCliente) {
		this.apellidoCliente = apellidoCliente;
	}

	/**
	 * Get the apellido_cliente.
	 * 
	 * @return apellido_cliente
	 */
	public String getApellidoCliente() {
		return this.apellidoCliente;
	}

	/**
	 * Set the telefono_cliente.
	 * 
	 * @param telefonoCliente
	 *            telefono_cliente
	 */
	public void setTelefonoCliente(String telefonoCliente) {
		this.telefonoCliente = telefonoCliente;
	}

	/**
	 * Get the telefono_cliente.
	 * 
	 * @return telefono_cliente
	 */
	public String getTelefonoCliente() {
		return this.telefonoCliente;
	}

	/**
	 * Set the edad_cliente.
	 * 
	 * @param edadCliente
	 *            edad_cliente
	 */
	public void setEdadCliente(Integer edadCliente) {
		this.edadCliente = edadCliente;
	}

	/**
	 * Get the edad_cliente.
	 * 
	 * @return edad_cliente
	 */
	public Integer getEdadCliente() {
		return this.edadCliente;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idcliente == null) ? 0 : idcliente.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Cliente other = (Cliente) obj;
		if (idcliente == null) {
			if (other.idcliente != null) {
				return false;
			}
		} else if (!idcliente.equals(other.idcliente)) {
			return false;
		}
		return true;
	}

	/**
	 * Funcion que verifica si el usuario con el id x ya a sido registrado.
	 * 
	 * @return boolean
	 */
	public static boolean verificarUsuario(String identificacion_cliente) {
		for (int i = 0; i < datosAgenda.getCliente_arrayList().size(); i++) {
			if (datosAgenda.getCliente_arrayList().get(i).getIdentificacionCliente()
					.equals(Integer.parseInt(identificacion_cliente))) {
				return true;
			}
		}
		return false;
	}

	/**
	 * Funcion para listar los clientes que se registran.
	 */
	public static void listarClientes() {
		if (datosAgenda.getCliente_arrayList().size() >= 1) {
			for (int i = 0; i < datosAgenda.getCliente_arrayList().size(); i++) {
				System.out.println(
						"Index: " + i + " - Item: " + datosAgenda.getCliente_arrayList().get(i).getIdentificacionCliente());
			}
		} else {
			JOptionPane.showMessageDialog(null, "No hay usuarios registrados", "No existen registros",
					JOptionPane.ERROR_MESSAGE);
		}
	}
}
